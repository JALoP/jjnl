This is an implementation of a library that supports sending and receiving of
JAL Records over a network using the Journaling, Auditing, and Logging Protocol
over HTTP.

Building and Installing
This project uses the maven (maven.apache.org) build tool, and 
is tested using the OpenJDK Runtime Environment (build 1.8.0_X).

The Java JALoP Network Library (JJNL) uses a multi-module layout, and the
entire project can be built by running maven commands in the jnl_parent
directory. The various modules are:

 - jnl_parent - This is the top-level project. Running maven commands within
      this directory affects all modules in the project. The jnl_parent module
      contains common configuration and dependency information.

 - jnl_lib - This module contains the code for the JJNL.

 - jnl_test - This module contains a utility program that acts as a JALoP Network
      Store. It uses the JNL to either listen for incoming connections. It's
      behaviour is governed by a configuration file.  The path to the configuration
      file is passed as a command line argument.

Installation Instructions:

1. Download and install maven:
	(Follow instructions at http://maven.apache.org/download.html)

# TODO remove this when we remove BEEP
2. Install the target beepcore library
    # Go to the root jjnl directory and run the following commands to determine the required beepcore version:
        ver=$(gawk 'BEGIN{RS="<[^>]+>"}{if (RT=="</beepcore.version>"){print $1}}' jnl_parent/pom.xml)
        echo $ver

    # Install beepcore from the jjnl 3rd-party distribution directory
        cd 3rd-party/beepcore-java/${ver}
	gunzip beepcore-${ver}.tgz
        tar xvf beepcore-${ver}.tar
        cd beepcore-${ver}/lib
        chmod 744 ./install_jars.sh
        ./install_jars.sh
     
3. Package JALoP JNL project
	# Go to the root directory for the jjnl repository. 
	# Go into the jnl_parent subdirectory:
        cd {path_to}/jnl_parent

	# Build the jjnl library using maven:
		mvn clean
		mvn package

Other Options:
--------------
These steps do not need to be executed in order to use the JALoP
libraries.

To run the unit tests and generate code coverage reports, run:
	mvn test

The generated code coverage reports will appear in the directory coverage-report

To clean the target directory, run:
	mvn clean

To generate Javadoc documentation, run:
	mvn site

The generated documents will appear in the directory target/site.

This project is built and tested in the following environments:
  RedHat Enterprise Linux (RHEL) 6 on x86_64
  RHEL 7 on x86_64